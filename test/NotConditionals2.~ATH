//Testing logic for killing the controlling var in nested loops using the same var

PROCREATE LOOP 0;
~ATH(LOOP) {
	input RATE "On a scale of A to AAAAA, how do you rate your suffering?";
	
	/*
	No implmentation for strings as an array of symbols yet, so uhh
	I dunno how this test case is gonna fly
	Im literally just gonna
	Copy the logic for the conditional workaround I did for drocta ~ATH
	In which BIFURCATE-ing a string gives the first char then the rest
	
	*/
	PROCREATE A 0;
	PROCREATE B 0;
	PROCREATE C 0;
	PROCREATE D 0;
	PROCREATE E 0;
	PROCREATE F 0;
	
	BIFURCATE RATE[RATE, END];
	~ATH(END) {
		A.DIE();
		BIFURCATE REST[RATE, END];
		
		~ATH(END) {
			B.DIE();
			BIFURCATE END[RATE, END];
			
			~ATH(END) {
				C.DIE();
				BIFURCATE END[RATE, END];
				
				~ATH(END) {
					D.DIE();
					BIFURCATE END[RATE, END];
					
					~ATH(END) {
						E.DIE();
						BIFURCATE END[RATE, END];
						
						~ATH(END) {
							F.DIE();
							BIFURCATE END[RATE, END];
						}
					}
				}
			}
		}
	}
	
	DEBATE (B) {
		print ("Aw, you wee bab. Do you want me to kiss your booboos away?");
	} UNLESS (C) {
		print ("Fortify!\n");
	} UNLESS (D) {
		print (":wackyZany:\n");
	} UNLESS (E) {
		print ("Have you tried mixing coffee and energy drinks yet.\n");
	} UNLESS (D) {
		print ("Same tbh.\n");
	} UNLESS {
		print ("You're overreacting. Calm your shit.\n");
	}
	
	LOOP.DIE();
}
THIS.DIE();