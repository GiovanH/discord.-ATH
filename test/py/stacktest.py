#!/usr/bin/env python
from athast import *
from athparser import TildeAthInterp

ath_script = Serialize([ProcreateStmt(VarExpr('LOOP'), IntExpr(1)), ProcreateStmt(VarExpr('STACK'), VarExpr('NULL')), TildeAthLoop(False, VarExpr('LOOP'), Serialize([PrintFunc([StringExpr('Select action:\\n')]), PrintFunc([StringExpr('[1] Add an item to stack\\n')]), PrintFunc([StringExpr('[2] View stack\\n')]), PrintFunc([StringExpr('[3] Exit\\n')]), InputStmt(VarExpr('CHOICE'), StringExpr('')), DebateStmt(BinaryExpr('==', VarExpr('CHOICE'), IntExpr(3)), Serialize([KillFunc(VarExpr('LOOP'), [])], LOOP), [UnlessStmt(BinaryExpr('==', VarExpr('CHOICE'), IntExpr(2)), Serialize([ProcreateStmt(VarExpr('BLAH'), IntExpr(0)), ReplicateStmt(VarExpr('TEMP'), VarExpr('STACK')), TildeAthLoop(False, VarExpr('BLAH'), Serialize([BifurcateStmt(VarExpr('TEMP'), VarExpr('TEMP'), VarExpr('TAIL')), DebateStmt(VarExpr('TEMP'), Serialize([PrintFunc([StringExpr('~s\\n'), VarExpr('TAIL')])], BLAH), [UnlessStmt(None, Serialize([KillFunc(VarExpr('BLAH'), [])], BLAH))])], BLAH))], LOOP)), UnlessStmt(BinaryExpr('==', VarExpr('CHOICE'), IntExpr(1)), Serialize([InputStmt(VarExpr('ITEM'), StringExpr('Input string to add: ')), AggregateStmt(VarExpr('STACK'), VarExpr('ITEM'), VarExpr('STACK'))], LOOP)), UnlessStmt(None, Serialize([PrintFunc([StringExpr('Invalid input.')])], LOOP))])], LOOP)), KillFunc(VarExpr('THIS'), [])], THIS)
TildeAthInterp().execute(ath_script)
