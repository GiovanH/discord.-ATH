#!/usr/bin/env python
from athstmt import *
from athinterpreter import TildeAthInterp

stmts = AthStatementList([
    TildeAthLoop(False, AthStatementList([
        AthTokenStatement('input', [IdentifierToken('NUM'), LiteralToken('Enter a number: ', str)]),
        CondiJump([BnaryExpr(['<', IdentifierToken('NUM'), LiteralToken(8, int)]), 40]),
        AthTokenStatement('print', [LiteralToken('Your number is less than 8.\\n', str)]),
        CondiJump([BnaryExpr(['<', IdentifierToken('NUM'), LiteralToken(4, int)]), 19]),
        AthTokenStatement('print', [LiteralToken('Your number is less than 4.\\n', str)]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(3, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 3.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 46]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(2, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 2.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 42]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(1, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 1.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 38]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(0, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 0.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 34]),
        AthTokenStatement('print', [LiteralToken('Negative? How deplorable.\\n', str)]),
        CondiJump([None, 32]),
        CondiJump([BnaryExpr(['>', IdentifierToken('NUM'), LiteralToken(4, int)]), 15]),
        AthTokenStatement('print', [LiteralToken('Your number is more than 4.\\n', str)]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(5, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 5.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 26]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(6, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 6.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 22]),
        CondiJump([BnaryExpr(['==', IdentifierToken('NUM'), LiteralToken(7, int)]), 3]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 7.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 18]),
        AthTokenStatement('print', [LiteralToken('This should never fuckin print.\\n', str)]),
        CondiJump([None, 16]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 4.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 13]),
        CondiJump([BnaryExpr(['>', IdentifierToken('NUM'), LiteralToken(8, int)]), 10]),
        AthTokenStatement('print', [LiteralToken('Your number is more than 8.\\n', str)]),
        CondiJump([BnaryExpr(['<', IdentifierToken('NUM'), LiteralToken(12, int)]), 2]),
        AthTokenStatement('print', [LiteralToken('Your number is less than 12.\\n', str)]),
        CondiJump([None, 8]),
        CondiJump([BnaryExpr(['>', IdentifierToken('NUM'), LiteralToken(12, int)]), 2]),
        AthTokenStatement('print', [LiteralToken('Your number is more than 12.\\n', str)]),
        CondiJump([None, 5]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 12.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        CondiJump([None, 2]),
        AthTokenStatement('print', [LiteralToken('Congrats, your number is 8.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Look at how achieved you are.\\n', str)]),
        AthTokenStatement('print', [LiteralToken('Time to end the program, mate.\\n', str)]),
        AthTokenStatement('DIE', [IdentifierToken('THIS')]),
        ], pendant='THIS'),
        AthTokenStatement('EXECUTE', [IdentifierToken('NULL')]))
    ], pendant='THIS')
TildeAthInterp().exec_stmts('Nesting.~ATH', stmts)
